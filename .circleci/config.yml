version: 2
workflows:
  version: 2
  tests:
    jobs: &workflow_jobs
      - node6:
          filters: &all_commits
            tags:
              only: /.*/
      - node8:
          filters: *all_commits
      - node10:
          filters: *all_commits
      - docs:
          filters: *all_commits
      - lint:
          filters: *all_commits
      - system_tests:
          filters:
            branches:
              only: master
            tags: &releases
              only: '/^v[\d.]+$/'
      - publish_npm:
          requires:
            - node6
            - node8
            - node10
            - system_tests
            - docs
          filters:
            branches:
              ignore: /.*/
            tags: *releases
  nightly:
    triggers:
      - schedule:
          cron: 0 7 * * *
          filters:
            branches:
              only: master
    jobs: *workflow_jobs
jobs:
  node6:
    docker:
      - image: 'node:6'
        user: node
    steps: &unit_tests_steps
      - checkout
      - run: &remove_package_lock
          name: Remove package-lock.json if needed.
          command: |
            WORKFLOW_NAME=`python .circleci/get_workflow_name.py`
            echo "Workflow name: $WORKFLOW_NAME"
            if [ "$WORKFLOW_NAME" = "nightly" ]; then
              echo "Nightly build detected, removing package-lock.json."
              rm -f package-lock.json samples/package-lock.json
            else
              echo "Not a nightly build, skipping this step."
            fi
      - run: &npm_install_and_link
          name: Install and link the module
          command: |-
            mkdir -p /home/node/.npm-global
            npm install
          environment:
            NPM_CONFIG_PREFIX: /home/node/.npm-global
      - run: npm run test-only
      - run: npm run codecov
  node8:
    docker:
      - image: 'node:8'
        user: node
    steps: *unit_tests_steps
  node10:
    docker:
      - image: 'node:10'
        user: node
    steps: *unit_tests_steps
  lint:
    docker:
      - image: 'node:10'
        user: node
    steps:
      - checkout
      - run: *npm_install_and_link
      - run: npm run check
  docs:
    docker:
      - image: 'node:10'
        user: node
    steps:
      - checkout
      - run: *remove_package_lock
      - run: *npm_install_and_link
      - run: npm run docs
  system_tests:
    docker:
      - image: 'node:10'
        user: node
    steps:
      - checkout
      - run: *remove_package_lock
      - run:
          name: Decrypt credentials.
          command: |
            openssl aes-256-cbc -d -in .circleci/key.json.enc \
                -out .circleci/key.json \
                -k "${SYSTEM_TESTS_ENCRYPTION_KEY}"
      - run: *npm_install_and_link
      - run:
          name: Run system tests.
          command: npm run system-test
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: .circleci/key.json
            GCLOUD_PROJECT: node-gcloud-ci
            GCLOUD_TESTS_KEY: .circleci/key.json
            GCLOUD_TESTS_PROJECT_ID: node-gcloud-ci
      - run:
          name: Remove unencrypted key.
          command: rm .circleci/key.json
          when: always
  publish_npm:
    docker:
      - image: 'node:10'
        user: node
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run: npm publish
