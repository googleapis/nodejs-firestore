---
# "Include" for unit tests definition.
unit_tests: &unit_tests
  steps:
    - checkout
    - run:
        name: Install modules and dependencies.
        command: npm install
    - run:
        name: Install codecov.
        command: npm install codecov
    - run:
        name: Run unit tests.
        command: npm test
    - run:
        name: Submit coverage data to codecov.
        command: node_modules/.bin/codecov
        when: always


version: 2.0
workflows:
  version: 2
  tests:
    jobs:
      - node4:
          filters:
            tags:
              only: /.*/
      - node6:
          filters:
            tags:
              only: /.*/
      - node7:
          filters:
            tags:
              only: /.*/
      - node8:
          filters:
            tags:
              only: /.*/
      - node9:
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - node4
            - node6
            - node7
            - node8
            - node9
          filters:
            tags:
              only: /.*/
      - docs:
          requires:
            - node4
            - node6
            - node7
            - node8
            - node9
          filters:
            tags:
              only: /.*/
      - system_tests:
          requires:
            - lint
            - docs
          filters:
            branches:
              only: master
            tags:
              only: /^v[\d.]+$/
      - publish_npm:
          requires:
            - system_tests
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[\d.]+$/

jobs:
  node4:
    docker:
      - image: node:4
    <<: *unit_tests
  node6:
    docker:
      - image: node:6
    <<: *unit_tests
  node7:
    docker:
      - image: node:7
    <<: *unit_tests
  node8:
    docker:
      - image: node:8
    <<: *unit_tests
  node9:
    docker:
      - image: node:9
    <<: *unit_tests

  lint:
    docker:
      - image: node:8
    steps:
      - checkout
      - run:
          name: Install modules and dependencies.
          command: npm install
      - run:
          name: Run linting.
          command: npm run lint

  docs:
    docker:
      - image: node:8
    steps:
      - checkout
      - run:
          name: Install modules and dependencies.
          command: npm install
      - run:
          name: Build documentation.
          command: npm run docs

  system_tests:
    docker:
      - image: node:8
    steps:
      - checkout
      - run:
          name: Decrypt credentials.
          command: |
            openssl aes-256-cbc -d -in .circleci/key.json.enc \
                -out .circleci/key.json \
                -k "${SYSTEM_TESTS_ENCRYPTION_KEY}"
      - run:
          name: Install modules and dependencies.
          command: npm install
      - run:
          name: Run system tests.
          command: npm run system-test
          environment:
            # TODO: Figure out if both of these pairs are necessary.
            GOOGLE_APPLICATION_CREDENTIALS: .circleci/key.json
            GCLOUD_PROJECT: node-gcloud-ci
            GCLOUD_TESTS_KEY: .circleci/key.json
            GCLOUD_TESTS_PROJECT_ID: node-gcloud-ci
      - run:
          name: Remove unencrypted key.
          command: rm .circleci/key.json
          when: always

  publish_npm:
    docker:
      - image: node:8
    steps:
      - checkout
      - run:
          name: Set NPM authentication.
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
         name: Publish the module to npm.
         command: npm publish
