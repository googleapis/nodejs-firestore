// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.firestore.admin.v1;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option csharp_namespace = "Google.Cloud.Firestore.Admin.V1";
option go_package = "google.golang.org/genproto/googleapis/firestore/admin/v1;admin";
option java_multiple_files = true;
option java_outer_classname = "DatabaseProto";
option java_package = "com.google.firestore.admin.v1";
option objc_class_prefix = "GCFS";
option php_namespace = "Google\\Cloud\\Firestore\\Admin\\V1";
option ruby_package = "Google::Cloud::Firestore::Admin::V1";

// A Cloud Firestore Database.
// Currently only one database is allowed per cloud project; this database
// must have a `database_id` of '(default)'.
message Database {
  option (google.api.resource) = {
    type: "firestore.googleapis.com/Database"
    pattern: "projects/{project}/databases/{database}"
    style: DECLARATIVE_FRIENDLY
  };

  // The type of the database.
  // See https://cloud.google.com/datastore/docs/firestore-or-datastore for
  // information about how to choose.
  enum DatabaseType {
    // The default value. This value is used if the database type is omitted.
    DATABASE_TYPE_UNSPECIFIED = 0;

    // Firestore Native Mode
    FIRESTORE_NATIVE = 1;

    // Firestore in Datastore Mode.
    DATASTORE_MODE = 2;
  }

  // The type of concurrency control mode for transactions.
  enum ConcurrencyMode {
    // Not used.
    CONCURRENCY_MODE_UNSPECIFIED = 0;

    // Use optimistic concurrency control by default. This setting is available
    // for Cloud Firestore customers.
    OPTIMISTIC = 1;

    // Use pessimistic concurrency control by default. This setting is available
    // for Cloud Firestore customers.
    // This is the default setting for Cloud Firestore.
    PESSIMISTIC = 2;

    // Use optimistic concurrency control with entity groups by default. This is
    // the only available setting for Cloud Datastore customers.
    // This is the default setting for Cloud Datastore.
    OPTIMISTIC_WITH_ENTITY_GROUPS = 3;
  }

  // The resource name of the Database.
  // Format: `projects/{project}/databases/{database}`
  string name = 1;

  // The location of the database. Available databases are listed at
  // https://cloud.google.com/firestore/docs/locations.
  string location_id = 9;

  // The type of the database.
  // See https://cloud.google.com/datastore/docs/firestore-or-datastore for
  // information about how to choose.
  DatabaseType type = 10;

  // The concurrency control mode to use for this database.
  ConcurrencyMode concurrency_mode = 15;

  // This checksum is computed by the server based on the value of other
  // fields, and may be sent on update and delete requests to ensure the
  // client has an up-to-date value before proceeding.
  string etag = 99;
}
