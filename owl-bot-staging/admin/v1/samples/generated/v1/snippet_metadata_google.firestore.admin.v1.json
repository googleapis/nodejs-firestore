{
  "clientLibrary": {
    "name": "nodejs-admin",
    "version": "0.1.0",
    "language": "TYPESCRIPT",
    "apis": [
      {
        "id": "google.firestore.admin.v1",
        "version": "v1"
      }
    ]
  },
  "snippets": [
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_CreateIndex_async",
      "title": "FirestoreAdmin createIndex Sample",
      "origin": "API_DEFINITION",
      "description": " Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to track the status of the creation. The metadata for the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].",
      "canonical": true,
      "file": "firestore_admin.create_index.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 60,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "CreateIndex",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.CreateIndex",
        "async": true,
        "parameters": [
          {
            "name": "parent",
            "type": "TYPE_STRING"
          },
          {
            "name": "index",
            "type": ".google.firestore.admin.v1.Index"
          }
        ],
        "resultType": ".google.longrunning.Operation",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "CreateIndex",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.CreateIndex",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_ListIndexes_async",
      "title": "FirestoreAdmin listIndexes Sample",
      "origin": "API_DEFINITION",
      "description": " Lists composite indexes.",
      "canonical": true,
      "file": "firestore_admin.list_indexes.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 70,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "ListIndexes",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.ListIndexes",
        "async": true,
        "parameters": [
          {
            "name": "parent",
            "type": "TYPE_STRING"
          },
          {
            "name": "filter",
            "type": "TYPE_STRING"
          },
          {
            "name": "page_size",
            "type": "TYPE_INT32"
          },
          {
            "name": "page_token",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.firestore.admin.v1.ListIndexesResponse",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "ListIndexes",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.ListIndexes",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_GetIndex_async",
      "title": "FirestoreAdmin getIndex Sample",
      "origin": "API_DEFINITION",
      "description": " Gets a composite index.",
      "canonical": true,
      "file": "firestore_admin.get_index.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 54,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "GetIndex",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.GetIndex",
        "async": true,
        "parameters": [
          {
            "name": "name",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.firestore.admin.v1.Index",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "GetIndex",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.GetIndex",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_DeleteIndex_async",
      "title": "FirestoreAdmin deleteIndex Sample",
      "origin": "API_DEFINITION",
      "description": " Deletes a composite index.",
      "canonical": true,
      "file": "firestore_admin.delete_index.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 54,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "DeleteIndex",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.DeleteIndex",
        "async": true,
        "parameters": [
          {
            "name": "name",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "DeleteIndex",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.DeleteIndex",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_GetField_async",
      "title": "FirestoreAdmin getField Sample",
      "origin": "API_DEFINITION",
      "description": " Gets the metadata and configuration for a Field.",
      "canonical": true,
      "file": "firestore_admin.get_field.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 54,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "GetField",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.GetField",
        "async": true,
        "parameters": [
          {
            "name": "name",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.firestore.admin.v1.Field",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "GetField",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.GetField",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_UpdateField_async",
      "title": "FirestoreAdmin updateField Sample",
      "origin": "API_DEFINITION",
      "description": " Updates a field configuration. Currently, field updates apply only to single field index configuration. However, calls to [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid changing any configuration that the caller isn't aware of. The field mask should be specified as: `{ paths: \"index_config\" }`. This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to track the status of the field update. The metadata for the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata]. To configure the default field settings for the database, use the special `Field` with resource name: `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.",
      "canonical": true,
      "file": "firestore_admin.update_field.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 59,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "UpdateField",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.UpdateField",
        "async": true,
        "parameters": [
          {
            "name": "field",
            "type": ".google.firestore.admin.v1.Field"
          },
          {
            "name": "update_mask",
            "type": ".google.protobuf.FieldMask"
          }
        ],
        "resultType": ".google.longrunning.Operation",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "UpdateField",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.UpdateField",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_ListFields_async",
      "title": "FirestoreAdmin listFields Sample",
      "origin": "API_DEFINITION",
      "description": " Lists the field configuration and metadata for this database. Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields that have been explicitly overridden. To issue this query, call [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to `indexConfig.usesAncestorConfig:false` .",
      "canonical": true,
      "file": "firestore_admin.list_fields.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 75,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "ListFields",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.ListFields",
        "async": true,
        "parameters": [
          {
            "name": "parent",
            "type": "TYPE_STRING"
          },
          {
            "name": "filter",
            "type": "TYPE_STRING"
          },
          {
            "name": "page_size",
            "type": "TYPE_INT32"
          },
          {
            "name": "page_token",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.firestore.admin.v1.ListFieldsResponse",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "ListFields",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.ListFields",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_ExportDocuments_async",
      "title": "FirestoreAdmin exportDocuments Sample",
      "origin": "API_DEFINITION",
      "description": " Exports a copy of all or a subset of documents from Google Cloud Firestore to another storage system, such as Google Cloud Storage. Recent updates to documents may not be reflected in the export. The export occurs in the background and its progress can be monitored and managed via the Operation resource that is created. The output of an export may only be used once the associated operation is done. If an export operation is cancelled before completion it may leave partial data behind in Google Cloud Storage. For more details on export behavior and output format, refer to: https://cloud.google.com/firestore/docs/manage-data/export-import",
      "canonical": true,
      "file": "firestore_admin.export_documents.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 70,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "ExportDocuments",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.ExportDocuments",
        "async": true,
        "parameters": [
          {
            "name": "name",
            "type": "TYPE_STRING"
          },
          {
            "name": "collection_ids",
            "type": "TYPE_STRING[]"
          },
          {
            "name": "output_uri_prefix",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.longrunning.Operation",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "ExportDocuments",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.ExportDocuments",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_ImportDocuments_async",
      "title": "FirestoreAdmin importDocuments Sample",
      "origin": "API_DEFINITION",
      "description": " Imports documents into Google Cloud Firestore. Existing documents with the same name are overwritten. The import occurs in the background and its progress can be monitored and managed via the Operation resource that is created. If an ImportDocuments operation is cancelled, it is possible that a subset of the data has already been imported to Cloud Firestore.",
      "canonical": true,
      "file": "firestore_admin.import_documents.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 68,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "ImportDocuments",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.ImportDocuments",
        "async": true,
        "parameters": [
          {
            "name": "name",
            "type": "TYPE_STRING"
          },
          {
            "name": "collection_ids",
            "type": "TYPE_STRING[]"
          },
          {
            "name": "input_uri_prefix",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.longrunning.Operation",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "ImportDocuments",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.ImportDocuments",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_CreateDatabase_async",
      "title": "FirestoreAdmin createDatabase Sample",
      "origin": "API_DEFINITION",
      "description": " Create a database.",
      "canonical": true,
      "file": "firestore_admin.create_database.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 67,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "CreateDatabase",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.CreateDatabase",
        "async": true,
        "parameters": [
          {
            "name": "parent",
            "type": "TYPE_STRING"
          },
          {
            "name": "database",
            "type": ".google.firestore.admin.v1.Database"
          },
          {
            "name": "database_id",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.longrunning.Operation",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "CreateDatabase",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.CreateDatabase",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_GetDatabase_async",
      "title": "FirestoreAdmin getDatabase Sample",
      "origin": "API_DEFINITION",
      "description": " Gets information about a database.",
      "canonical": true,
      "file": "firestore_admin.get_database.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 54,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "GetDatabase",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.GetDatabase",
        "async": true,
        "parameters": [
          {
            "name": "name",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.firestore.admin.v1.Database",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "GetDatabase",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.GetDatabase",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_ListDatabases_async",
      "title": "FirestoreAdmin listDatabases Sample",
      "origin": "API_DEFINITION",
      "description": " List all the databases in the project.",
      "canonical": true,
      "file": "firestore_admin.list_databases.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 54,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "ListDatabases",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.ListDatabases",
        "async": true,
        "parameters": [
          {
            "name": "parent",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.firestore.admin.v1.ListDatabasesResponse",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "ListDatabases",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.ListDatabases",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    },
    {
      "regionTag": "firestore_v1_generated_FirestoreAdmin_UpdateDatabase_async",
      "title": "FirestoreAdmin updateDatabase Sample",
      "origin": "API_DEFINITION",
      "description": " Updates a database.",
      "canonical": true,
      "file": "firestore_admin.update_database.js",
      "language": "JAVASCRIPT",
      "segments": [
        {
          "start": 25,
          "end": 58,
          "type": "FULL"
        }
      ],
      "clientMethod": {
        "shortName": "UpdateDatabase",
        "fullName": "google.firestore.admin.v1.FirestoreAdmin.UpdateDatabase",
        "async": true,
        "parameters": [
          {
            "name": "database",
            "type": ".google.firestore.admin.v1.Database"
          },
          {
            "name": "update_mask",
            "type": ".google.protobuf.FieldMask"
          }
        ],
        "resultType": ".google.longrunning.Operation",
        "client": {
          "shortName": "FirestoreAdminClient",
          "fullName": "google.firestore.admin.v1.FirestoreAdminClient"
        },
        "method": {
          "shortName": "UpdateDatabase",
          "fullName": "google.firestore.admin.v1.FirestoreAdmin.UpdateDatabase",
          "service": {
            "shortName": "FirestoreAdmin",
            "fullName": "google.firestore.admin.v1.FirestoreAdmin"
          }
        }
      }
    }
  ]
}
